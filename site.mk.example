##	gluon site.mk makefile example

##	GLUON_FEATURES
#		Specify Gluon features/packages to enable;
#		Gluon will automatically enable a set of packages
#		depending on the combination of features listed

GLUON_FEATURES := \
	autoupdater \
	ebtables-filter-multicast \
	ebtables-filter-ra-dhcp \
	mesh-batman-adv-15 \
	mesh-vpn-tunneldigger \
	radvd \
	respondd \
	status-page \
	web-advanced \
	web-private-wifi \
	config-mode-geo-location-osm \
	web-osm \
	web-wizard

##	GLUON_MULTIDOMAIN
#		Build gluon with multidomain support.

GLUON_MULTIDOMAIN=1

##	GLUON_SITE_PACKAGES
#		Specify additional Gluon/LEDE packages to include here;
#		A minus sign may be prepended to remove a packages from the
#		selection that would be enabled by default or due to the
#		chosen feature flags

GLUON_SITE_PACKAGES := \
	haveged \
	iwinfo \
	iw-full \
	gluon-aptimeclock \
	gluon-nightboot \
	gluon-treatment \
	gluon-ssid-changer \
	gluon-banner \
	gluon-linkcheck \
	gluon-rsk-block-mesh \
	gluon-rsk-config \
	rsk-robinson \
	gluon-web-logging \
	gluon-scheduled-domain-switch \
	gluon-config-mode-domain-select
	
# Especially the first Raspberry-Pi does not have a wifi-chip and needs a usb-wifi-dongle
# This adds USB-Support, USB-Wifi-Support and nano-editor for Raspberry-Pis
# - D. Marx (github.com/derco0n) 04/2019
GLUON_raspberry-pi_SITE_PACKAGES := kmod-usb-core kmod-usb2 kmod-rtl8192cu kmod-rt2800-usb kmod-rtl8187 usbutils nano
GLUON_raspberry-pi-2_SITE_PACKAGES := kmod-usb-core kmod-usb2 kmod-rtl8192cu kmod-rt2800-usb kmod-rtl8187 usbutils nano
GLUON_raspberry-pi-3_SITE_PACKAGES := kmod-usb-core kmod-usb2 kmod-rtl8192cu kmod-rt2800-usb kmod-rtl8187 usbutils nano

##	DEFAULT_GLUON_RELEASE
#		version string to use for images
#		gluon relies on
#			opkg compare-versions "$1" '>>' "$2"
#		to decide if a version is newer or not.

DEFAULT_GLUON_RELEASE := 1.1.4-$(shell date '+%Y%m%d')

# Variables set with ?= can be overwritten from the command line

##	GLUON_RELEASE
#		call make with custom GLUON_RELEASE flag, to use your own release version scheme.
#		e.g.:
#			$ make images GLUON_RELEASE=23.42+5
#		would generate images named like this:
#			gluon-ff%site_code%-23.42+5-%router_model%.bin

GLUON_RELEASE ?= $(DEFAULT_GLUON_RELEASE)

# Default priority for updates.
GLUON_PRIORITY ?= 0

# Region code required for some images; supported values: us eu
GLUON_REGION ?= eu

# Languages to include
GLUON_LANGS ?= de en

# Activate image creation for ATH10K devices
GLUON_ATH10K_MESH := 11s
